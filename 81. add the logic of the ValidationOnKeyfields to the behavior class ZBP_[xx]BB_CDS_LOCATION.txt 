CLASS lhc_location DEFINITION INHERITING FROM cl_abap_behavior_handler.
  PRIVATE SECTION.

    METHODS ValidationOnKeyfields FOR VALIDATION location~ValidationOnKeyfields
      IMPORTING keys FOR location.

    METHODS DeterminationForNewRecord FOR DETERMINATION location~DeterminationForNewRecord
      IMPORTING keys FOR location.

    METHODS get_features FOR FEATURES
      IMPORTING keys REQUEST requested_features FOR location RESULT result.

ENDCLASS.

CLASS lhc_location IMPLEMENTATION.

  METHOD DeterminationForNewRecord.

    DATA lt_update TYPE  TABLE FOR UPDATE z00bb_cds_location.

    READ ENTITIES OF z00bb_cds_location
        ENTITY location
        FROM VALUE #( FOR <root_key> IN keys ( %key = <root_key> ) )
        RESULT DATA(lt_location).

    MOVE-CORRESPONDING  lt_location TO lt_update.
    SELECT MAX( locationid ) FROM z00_dt_location INTO @DATA(locationid).
    LOOP AT lt_update ASSIGNING FIELD-SYMBOL(<location>).
      IF <location>-description IS INITIAL.
        <location>-description = |No description available|.
        <location>-%control-description   = cl_abap_behv=>flag_changed.
      ENDIF.

      IF <location>-rating IS INITIAL.
        <location>-rating = 5.
        <location>-%control-rating   = cl_abap_behv=>flag_changed.
      ENDIF.

      IF <location>-seats_unit IS INITIAL.
        <location>-seats_unit = |ST|.
        <location>-%control-seats_unit   = cl_abap_behv=>flag_changed.
      ENDIF.

    ENDLOOP.

    MODIFY ENTITIES OF z00bb_cds_location  IN LOCAL MODE
                ENTITY location
                       UPDATE FROM lt_update .

  ENDMETHOD.

  METHOD get_features.
  ENDMETHOD.

  METHOD validationonkeyfields.
    DATA: msg_text TYPE string.
    READ ENTITIES OF z00bb_cds_location IN LOCAL MODE
        ENTITY location
        FROM VALUE #( FOR <root_key>
                      IN keys ( locationid = <root_key>-locationid
                                %control = VALUE #(
                                  locationid = if_abap_behv=>mk-on
                                )
                      )
                    ) RESULT DATA(lt_location).

    LOOP AT lt_location ASSIGNING FIELD-SYMBOL(<location>).
      IF <location>-locationid IS INITIAL.
        msg_text = 'Location id cannot be empty'.
        APPEND VALUE #( locationid = <location>-locationid ) TO failed.
        APPEND VALUE #( locationid = <location>-locationid
                        %msg = new_message( id = 'SABP_BEHV'
                                            number = '100'
                                            v1 = msg_text
                                            severity = if_abap_behv_message=>severity-error )
                        %element-locationid = if_abap_behv=>mk-on
                      ) TO reported.

      ELSEIF <location>-locationid < '9000'.
        msg_text = 'Location id should be between 9000 and 9999.'.
        APPEND VALUE #( locationid = <location>-locationid ) TO failed.
        APPEND VALUE #( locationid = <location>-locationid
                        %msg = new_message( id = 'SABP_BEHV'
                                            number = '100'
                                            v1 = msg_text
                                            severity = if_abap_behv_message=>severity-error )
                        %element-locationid = if_abap_behv=>mk-on
                      ) TO reported.
      ENDIF.
    ENDLOOP.
  ENDMETHOD.

ENDCLASS.